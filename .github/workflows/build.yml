name: Build

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run linter
        run: yarn lint

      - name: Run formatter
        run: yarn format

      - name: TypeScript build
        run: yarn ts:build
  deploy:
    needs: build
    # only run deploy on pushes and releases
    # pushing to main will deploy to production for bootcamp
    if: ${{ github.event_name == 'push' }}

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # set target deployment to prod on push
      - name: Configuration for production deployment
        run: |
          echo "DEPLOYMENT_TARGET=production" >> $GITHUB_ENV
          echo "DEPLOYMENT_HOST=${{secrets.DEPLOY_HOST}}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push version image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          cache-to: uwcsclub/codey-bootcamp:cache
          cache-from: uwcsclub/codey-bootcamp:cache
          file: docker/production/Dockerfile
          push: true
          tags: uwcsclub/codey-bootcamp:${{ github.sha }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: Pull image and start container in deploy host
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          proxy_host: ${{ secrets.DEPLOY_PROXY_HOST }}
          proxy_username: ${{ secrets.DEPLOY_PROXY_USER }}
          proxy_key: ${{ secrets.DEPLOY_PROXY_KEY }}
          script: |
            cd ~/codey/bootcamp
            curl -o docker-compose.yml https://raw.githubusercontent.com/uwcsc/codey-bootcamp/main/docker/production/docker-compose.yml
            docker pull uwcsclub/codey-bootcamp:${{ github.sha }}
            echo "DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN }}" > .env
            echo "TAG=${{ github.sha }}" >> .env
            docker compose down
            docker compose up -d
